#+TITLE: Exercise 2.3.7
#+OPTIONS: tex:t toc:nil num:nil f:nil todo:nil author:nil email:nil
#+OPTIONS: creator:nil d:nil timestamp:nil

#+STYLE: <style>
#+STYLE: h1.title {text-align: left; margin-left: 3%;}
#+STYLE: p { margin: 0; padding 0; white-space: pre; }
#+STYLE: section {  margin-left: 3%; }
#+STYLE: blockquote { padding: 10px; border-left: 5px silver solid; font-weight:bold; }
#+STYLE: </style>

#+BEGIN_QUOTE
Describe $\theta(n\log{n}$-time algorithm that, given a set S of n
integers and another integer x, determines whether or not there exist
two elements in S whose sum is exactly x.
#+END_QUOTE

#+HTML: <section>
If we sort S using merge sort and then check(using binary search) for
each element $a$ if there is element $b=x-a$. We will get time
$T(n)=\theta(n\log{n}) + \theta{n\log{n}} = \theta(n\log{n})$.
#+HTML: </section>
