#+TITLE: Introduction to Algorithms
-------

#+BEGIN_COMMENT
- *TODO* [0/2]
  + [ ] Math appendix.
#+END_COMMENT

* I Foundations
** 1 The Role of Algorithms in Computing
** 2 Getting Started
*** Asymptotic notation
    Notation used to describe how running time of algorithm increases
    with increase of input data.
*** Loop Invariant
    Statement of conditions that should be true on entry into a loop
    and that are guaranteed to remain true on every iteration of the
    loop.

    1. *Initialization* - It is true prior first iteration.
    2. *Maintenance* - Each iteration maintains loop invariant.
    3. *Termination* - When loop terminates, invariant can be used to
       show that algorithm is correct.
*** Size of input
*** Running time
    Number of primitive operations(steps) executed for particular
    input. We can analyze best, average and (primary) worst case
    running times.
*** Order of growth
    How fast running time function grows for input size. This is the
    most determinant characteristic of running times and algorithms
    effectiveness.
*** Divide-and-conquer
    - *Divide* problems into subproblems.
    - *Conquer* subproblems by solving them recursively or
      straightforward if they are small enough.
    - *Combine* solutions into bigger problem solution.
*** Recurrence equations
    Equations used to describe running times of recursive algorithms.
    They describe overall running time on a problem of size n in terms
    of running times of smaller inputs.
** 3 Growth of Functions
** 4 Divide-and-Conquer
** 5 Probabilistic Analysis and Randomized Algorithms
